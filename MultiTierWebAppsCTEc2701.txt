
Thu  6 Oct 16:03:06 BST 2016

	what protocol is RFC 1?
	research common telnet vulns

	learn to scan RFCs

	RFCs maintained by the IETF

	protocols require setup and teardown

	telnet	-
		stop and wait protocol
		problems	-
			no authentication; implicit trust
				extremely vulnerable to MITM
			no encryption
				packet sniffing allows for password leaks
			many exploitable vulns

		many protocols are built upon principles laid out by telnet
			FTP HTTP SMTP all suffer from the same issues
			these issues are built in zero day problems

	NVT	
		first example of client server protocol

	HTTP
		aka universal fireawall bypass protocol

		stateless
			no built in technique to remember requests or users etc.
		
		solely inteded for transporting web pages
		
		usually sits on TCP/IP

		Wep pages themselves built from HTML
			embedded web objects

		variations
			1.0 and 1.1
			1.0 = non persistant
				multiple connections required to load multiple objects
			1.1 = persistant
				keeps connection open 
				piplining = parrallel streaming of objects (mol)
			2.0 -
				push vs requests
					push sends resources automatically based on source code of page - no requests nessasary

		request and response protocol
			HOST is mandatory (essentially designates url or destination IP)
				all others are optional
			controls behavior

		Request methods
			Options
			get
			head
			post
			put
			delete
			trace
			connect

			trace should be disabled for safety

		'Safe' Methods
			GET and HEAD are safe methods as they cannot be used to alter data on the server, only request data

		Idempotent Methods
			multiple requests of the same type should only result in one response

		status codes
			informational 1xx
				request recieved, continuing processing
			successfull 2xx
				requested action was recieved, understood and processed
			redirection 3xx
				redirection
				usually not noticable without packet sniffing
			Client Error 4xx
				client has errored in some way
			Server Error 5xx
				server has failed to fufill a valid request

			error messages can be rewritten from defaults in configuration files

			[look into specifics]

	
Thu 13 Oct 10:03:32 BST 2016

	SSL
		cryptographic software
		encrypted tunnel between client and server
		agreed engryption algorithm
		uses diffie-helmant to exhange encryption keys

		Diffie_Helman Exchange
			method of echanging keys
			allows two parties that have no prior knowledge of each other to jointly establish a shared secret 
			key over an insecure comunications channel
		
		need for secure transmission
		netscape created ssl for http, ldap, and pop3 only

		objectives
			authenticating the server and client to each other
			ensuring data integrity
			securing data privacy

		summary
			authenticate the server to the client
			allow the client and server to select the cryptographic algorithms, or ciphers that they both support
			optionally authenticate the client to the server
			use public-key encryption tachniques to generate shared secrets
			establish an encrypted SSL connection

			every few seconds, client and server re-negotiate to re-secure communications
			with new ciphers


			SSL is not a single protocol
			2 layers
				Data Security
					SSL Record Protection
						defines data transmit format
						ensure data security and integrity
				Establish the connection
					SSL Handshake Protocol
						Uses ssl record protocol to establish an ssl connection
					SSL ChangeCipher SpacProtocol
					SSL Alert Protocol

			SSL Connection
				Logical server-client link
					associated with the provision of a suitable type of servie
					must be a peer-to-peer connection with two network nodes

			SSL Session
				Association between a client and a server that defines a set of parameters
					algorithms used, session number etc

				Created by the Handshake protocol
					allows parameters to be shared among the connections made between the server and the
					client
					sessions are used to avoid negotiation of new parameters for each connection
				Session parameters
					session identifier
					peer certificate
					compression method
					algorithm specification termed CipherSpec
					Master secret
					"is resumable"
				Connection Parameters
					Server and client random
					server write MAC secret
					Client write MAC secret
					Server write key
					Client write key
					Sequence number

					NM MAC = Message Authentication Code

			ssl can be MITM'd

			many organisations place a server at the gateway of the network known as a proxy server, generates
			certificate that allows for an encrypted tunnel between client and proxy server, before re-encrypting
			packets to be sent to destination.

			TLS is an updated replacement for SSL

			SSL 2 is badly broke, can be used to comprimise servers



Thu 20 Oct 10:09:57 BST 2016
	
	port numbers are 16 bits
	0-1023 are known ports
	1024-	defacto well known ports - not preallocated but are pre-used

	securing FTP
		FTP Ports 20 for data and 21 for commands
		vulns
			brute force
			bounce attacks
			packet capture
			port stealing
			spoof attacks
			username protection
		secure FTP
			secure transmission
			encrypts username/passwd
			encrypts content
			SSL/TSL ("FTPS")
			SSH File Transfer Protocol ("SFTP") may be used instead
				technologically different
				[the one that we actually use!]
		port 22
		functionally identical/similar
		completely different and seperate

		[DO FTP LAB SHEET]



		Explicit FTPS
			extenstion to the FTP standard
			clients can request that the FTP session be encrypted
				AUTH TLS
			server has the option of allowing or denying based on TLS requests
		Implicit FTPS - Decprecated
			required the use of SSL or TLS
			uses different ports
				
		FTP over SSH
			not SFTP
			tunneling normal FTP through SSH connection
				difficult because FTP uses multiple TCP connections
			most ssh clients
				protect command channel
				ignore data channel
				not completely secure, not ideal
		TFTP
			Trivial FTP - Has its uses
			uses UDP on port 69
			very small and easy to implement
			cannot list directories
			no user auth
			fixed block size
			stop and wait protocol
			used for things such as login
			has to supply is own transport and session support
			each file transfer is independent
			
			[windows 2008 introduced pipelined TFTP as part of WDS
				uses an 8 packet window by default
				improves performance for eg PXE Booting]

	Sending emails
		
		Emails
			not a gurenteed service
			store and forward model
			servers accept forward, deliver and store messages
			predates the internet
			RFC 561 (1973)

			[email servers are horribly complicated! Do not ever set up an email server from scrach
			unless you know exactly what youre doing! You WILL leave yourself vulnerable! Incorrect
			headers lead to domain blocking, gets messy!]

			[email headers are neat, check them out]

		SMTP
			simple message transfer protocol
			RFC 5322
				Multi-media content attatchments
				MIME
					rfc 2045-2049
			Port 25, 2525, 465, 587

		Message format
			Header
				fields (From, To, CC, Subject, Date)
			Blank Line
			Body
				Basic content
					unstructured text
					may contain signiture block
					may be html
			
			[reason to use email client: disable html by default!]
			
			only required fields are From and Date
			Should be included: Message-ID, In-Reply_To
			Optional: To, Subject, BCC, CC Content-Type, precedence, references, Reply-To etc.

		SMTP Trace Info
			recieved
			return-path
			authentication-results

		IMAP
			Internet Message Access Protocol
			port 143, 993 over SSL
			users account has access to mail folders on mail server
			microsoft windows
				messaging architechture
				component object model based API
			Usually used with MAPI/RPC
				proprietary protocol
				outlook communicates with MS Exchange
			

Thu 27 Oct 10:06:31 BST 2016


	phase test will be multiple choice blackboard test
	review lecture notes, lab handouts, and lab topics for revision

	discuss the three alternative techniques used by a DHCP server to allocate IP addresses
	summarise the flow of messages that occurs when a host requests an IP address from a DHCP server
	Describe each of the theww main categories by which a DHCP server may be attacked

	DHCP
		Dynamicallys configures IP addresses
		central DHCP server
		Facilitates expanding a network
		Server manages a pool of IP addresses
		IP adress is "leased" to a client machine

		originally BOOTP protocol
			updated the RARP protocol [look up both of these]

	IP Allocation
		Dynamic Allocation
		automatic allocation
		static allocation
			server allocates addresses sequentially
			lease expires after some time, address is released
			released addresses are re-used

	DHCP Ports
		UDP 67 & 68
		port 67 for sending data to server
		port 68 for data to client
		DHCP is stateless
	
	DHCP Discover 
		client broadcasts messages on the physical subnet to discover available DHCP server
		packet has broadcast sestination of 255.255.255.255


Thu 27 Oct 16:04:32 BST 2016

	DHCP DORA Cycle
		Discover
		Offer
		Request
		Accept
	
	ARP
		Adress Resolution Protocol
		broadcasts a request in a fram across the local network asking "who has this IP?"
		creates table of MAC/IP Mapping
		IPv6 has neighbor discovery
		one request, one response

		lower on protocol stack that TCP/UDP

		tables are purged, discovery done at regular intervals

		arp probe
			is this address in use?

		arp announcement 
			this machine is alive

		arp mediation
			vpn privacy [look this up]

		arp spoofing
			no authentication
			mitm attack vector
			ettercap [!]

		arp caches at layer 2

		arp stuffing
			machine connects, broadcasts mac in advance of requests

	Routers
		WEP
			based on DES, 5 min crack 
			deprecated

		WPA/2
			WPA2 (practically) unbreakable
				unless WPS is enable [disable on all the things]

		IMPORTANT: Network owner is legally responsible for any traffic or activity on their network.
			Police can supeona records and such for a network and leave the owner culpable

		[Routers are capable computing platforms, make note of this could be fun]

		Dynamic Routing Protocol
			Routers communicate between each other, conveying information about traffic density and
			route congestion in real time, updating second to second

			calculations based on routing metrics
				what factors are important? 
				how to calculate weightings?

			Hot potato algorithms - Routers get rid of packets ASAP

			Leaky Bucket algorithms - If routers are too busy they cull packets, inform source
			that packet has been killed

			Routers are only busy for short spaces of time due to quick response of network
				weightings are change to avoid congested routers, allowing for routers to
				offload packets

			Routing Factors
				Prefix Length
				Metrics
				Administrative distance
					how many hops from A to B

			[sysops hate traceroute, tracing uni network maybe not the best idea]


Thu  3 Nov 10:04:34 GMT 2016

	DNS
		Hirarchical distributed naming system
		Any network connected resource
			internet/intranet
		Maps textural domain names to IP Addresses
		Essential componant of the internet [critical infrastructure!]
		
		DNS maps names (web addresses) against their IP addresses (which are hard for humans to remember)

	Name Servers
		Hierarchy of domains
		each domain has an authoritative name server
			responsible for their supported domains
			may delegate authority over subdomains to other name servers
		mechanism
			provides distrubted and fault tolerant service
			designed to avoid the need for a single central database
		Stores the DNS records for a domain name
			address (A or AAAA) records
			name server (NS) records
			mail exchander (MX) records
		Responds with answers to queries against its database
	
	Domain Name Space
		Tree of domain names
	
	address resolution mechanic
		Recurser makes a lookup query
			first queries root namesever, which directs it to top level domain nameserver
			top level domain nameserver directs to subdomain nameserver
			subdomain nameserver gives correct IP for the server queried
	
	Client Lookup
		Web browsers contain mini-caches that timeout after about 30mins, are checked first
		OS DNS Resolver checks its own local cache next (also purged after set TTL)
		ISP keeps a DNS cache which is checked after OS cache
		failing all of the above, recursive DNS search is done

	Wildcard DNS records
		specify names that start with asterix label '*'
			eg. *.example
	
	Dynamic DNS updates use the UPDATE DNS opcode to add or remove resource records dynamically from a zone database
	maintained on an authoritative DNS server
		RFC 2136
		Registers network clients
		client may be assigned a different IP address
			not possible to provide static DNS assignments

	Security Issues
		DNS Cache poisoning
		data is distributed to caching resolvers as an authoritative origin server
			poisoned data spreads down the tree

		DNS responses are traditionally not signed	}
		Domain names may be userd to achieve spoofing 	}MITM vulns 

		Use techniques eg forward-confirmed reverse DNS to help validate DNS results

	Domain Name Registration
		domain name registrars accredited by ICANN

		each TLD maintained and serviced technically by an administrative organisation, operating a registry
			only 13 of these servers on earth

		Registry responsible for maintaining the database of names registered within the TLD it administers

		Receives registration information from each domain name registrar authorized to asifn names in the 
		corresponding TLD
			publishes the information using a special service, the WHOIS protocol

	[DNS port: 53]


Thu 17 Nov 10:01:53 GMT 2016

	phase test week 22
	semi open book: Data model, test data and scenario provided before and during test

	model is same one being built in labs [GO TO LABS]

	reccomended text: 
		Howe, D.R. (2001) Data Analysis for Database Design. 3rd ed. Butterworth-Heinemann
		Connolly, T.M. and Begg C.E. (2012) Database Systems. Addison Wesley
		Date C.(2004) An Introduction to Database Systems. Addison Wesley
		Rolland, F.D. (1998) The Essence of Databases, Prentice Hall.
		Van Der Lans, R.F. (2006) Introduction to SQL. Addison Wesley

	
		

Thu 17 Nov 15:57:03 GMT 2016

	types of DB
		SQL	 	= Relational
		MogoDB 		= Document
		Cassandra 	= Column
		Neo4j 		= Graph

	Mongo DB
		no care for redundancy, built upon availibility and speed
		data and structure are one and the same, less differentiated
	
	Relational Terms
		Tables 		= relations
		rows 		= records/tuples
		columns 	= fields attribute types
		data types 	= domains
			(Domains are like a super data type (IE All the telephone numbers in the UK would be a domain)
			A specific type of information that transcends traditional data typing)
		Table Type 	= Intension

	SQL Terms (Commands = Statements)
		Definition: Create Table, Drop Table...
		Manipulation: Insert, Select, Update, Delete ...

	
Thu 12 Jan 10:03:32 GMT 2017

	DBMS Architecture
	
		external: 	limited and simplified views of the database suitable for a single application or a group of 
				associated applications
		
		conceptual: 	what data are availible in the database
	
		internal: 	how the data is stored and accessed
		

	logical data independence between top two layers
	physical data independence between bottom two layers

	providing levels of data abstraction hides the complexity of the underlying data structures

	External Schema
	
		A database may have several external schema suitable for different applications

		they provide a means of limiting the percieved complexity of a large system

		they hide those parts of the databse which are not required for a particualr pupose or department
		(Useful for security)

		External schema are based on the conceputal schema
	
	conceptual schema
		
		describes the global view of the database in a logical form

		avoids the need to know the exact physical structure and access method required for physical data

		the conceptual schema also describes the global constraints on the data

		this is the general administration/development view of the database

	Internal Schema

		describes the lobal view of the data in technical terms such as reord formats, data compression techniques,
		pointers, indexes and hash tables

		conveniently the conceptual schema describes the global view at a logical level without this complexity

		below the internal schema lies the OS and the hardware (the physical level)

	Data independence

		Data independence is the capacity to change the schema at one level of the database without having to change 
		the schema at a higher level

		Logical data independence
			
			the capacity to change the conceptual schema without changing external schemal nor application
			programs. For example:	
						Adding and removing base tables and attributes
						adding and removing constraints on the data
						granting and revoking access rights

			Only some relevant applications might need to be aware of the change to the conceptual schema; other
			applications will not

		Physical Data Independence

			the ability to change the internal schema without causing changes to conceptual database design nor 
			the application programs. Examples include:
						Changing the file organisation
						using different storage devices for different tables
						modifying indexes or hashing algorithms, etc.
			This type of change does not impact on the conceptual nor external schemas

			from the user point of view, the only effect that may be noticed is a change in speed or performance

	views
		Dynamic result of an SQL command operating on the base tables to produce a virtual table
		
		A virtual table does not actually exist in the database, but is produced upon request by a particular user,
		at the time of request

		views restrict access to the database and limit what the user can see or change

		users are given access to views by a database developer

		views can be used in select statements and dropped in a similar manner to tables

	
	Database security controls
		
		Authentication
			determining whether a user is who he or she claims to be

		Authorization
			Granting a right or privilege, which enables a user to legitimately have access and manipulate a 
			table or view

		Accounting
			Monitoring database usage

	Authentication
		
		password hashing
			hashing encodes plain text passwords
			
			This is a one way function

			hash value stored in database

			user supplied password is hased to compare with one stored in the database

			cracked by hashed dictionary attacks

			ideally, not even an admin or dev will be able to determin a given users password


Thu 12 Jan 16:12:18 GMT 2017

	SQL Injection
		
		user input alters the meaning of a query

		can return unauthorized data

			"SELECT * FROM owner WHERE dbOwnerId = '".$_POST['frmOwnerId']."'"

		Owner Id input: ' OR '1'='1

			"SELECT * FROM owner WHERE dbOwnerId = '' OR '1'='1'"

		1 = 1 is always true, so all rows are returned

		SQL preparation, variable binding and execution should be seperated
	
	Authorisation

		Different users granted different rights (privileges) to access and manipulate a table or view
			GRANT 	<privileges>
			ON	<object>
			TO	<user>
		Privileges: SELECT, UPDATE, DELETE or INSERT

		Example:
			GRANT SELECT, UPDATE (salary)
			ON Staff
			TO Fred;

		This is a type of Discressionary Access Control (DAC)

		Oposit command is REVOKE
			REVOKE 	<privileges.
			ON	<object>
			TO	<user>

	
	Database Administrator

		Starts and stops the Database Server
		Creates new databases
			CREATE DATABASE mmsdb;
		Allocates developer and user accounts
			GRANT ALL PRIVILEGES
				ON mmsdb.*
				TO mms_dev@localhost
				IDENTIFIED BY 'red'
				WITH GRANT OPTION;	<- Allows user to grant the same privileges to others

			CREATE User mms_web@localhost
				IDENTIFIED BY 'green';	<- Leave the granting of web user's privileges to dev users now
		
		MySQL root user

	Database Developer
		Defines how a database is structured
		creates and drops tables
		grants privileges to Database Users
			GRANT 	SELECT, INSERT
			ON	mmsdb.studio
			TO	mms_web@localhost;
		Protected by red password
	
	Database User
		Uses account provided by administrator
		granted access to certain tbles by developer
		manipulates data tables
			INSERT INTO studio (dbStudioId, dbTown)
				VALUES ('S1', 'Leicester');
		Accessed by green password

	Accounting
		Monitors authorised and unauthorised usage of database
		Data discrepancies lead to suspicion and audit trail can provide evidence
		Audit trail record might contain: User ID, timestamp, table/record/column affected. old values, new values
		Access to audit table is restricted
		Might deter wrong doing
